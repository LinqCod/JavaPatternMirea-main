package ru.mirea.task5;

//пример из методички
/**
 * Плюсы:
 * Ленивая инициализация.
 * Потокобезопасность
 *
 * Минусы:
 * Низкая производительность в многопоточной среде
 *
 * Отлично! В реализации номер три мы вернули потокобезопасность! Правда, медленную… Теперь метод getInstance синхронизирован,
 * и входить в него можно только по одному.
 * На самом деле нам нужно синхронизировать не весь метод, а лишь ту его часть,
 * в которой мы инициализируем новый объект класса. Но мы не можем просто обернуть в synchronized блок часть,
 * отвечающую за создание нового объекта: это не обеспечит потокобезопасность. Все немного сложнее.
 * Правильный способ синхронизации представлен в 5-ой:
 * **/
public class Singleton1 {
    private static Singleton1 instance=null;

    private Singleton1() {
    }

    public static synchronized Singleton1 getInstance() {
        if(instance == null) {//instance — это сущность созданная на основе класса
            instance = new Singleton1();
            return instance;
        }
        return instance;
    }

}
